jblas-ruby - fast linear algebra for JRuby
(c) 2009, 2010 by Mikio L. Braun

Version 1.1, Release August 20, 2010

(Note that version numbers are in sync with jblas, although jruby is somewhat
less mature than jblas)

jblas-ruby is a wrapper for JRuby of jblas (http://jblas.org), a linear algebra
library for Java.

To get a quick start, see examples/basic_arith.rb and the rdoc documentation for
the JBLAS module.

ODD PLACES:

what is a matrix in terms of an enumerable?
-------------------------------------------

mat[[1,2],[3,4]] suggests, a matrix is an efficient way to store [[1,2],[3,4]],
but internally it is actually more like [1,3,2,4] with rows=2, columns=2.

So let's just drop that and say that a matrix as an enumerable is a sequence of
numbers

x = mat[[1,2],[3,4]]
x.to_a = [1,3,2,4]

Still, one might need to access the rows as an array. How about

x.rows_to_a = [[1,2],[3,4]]
x.columns_to_a = [[1,3],[2,4]]

Because x.rows.to_a is already taken:

x.rows = 2
x.columns = 2


what to do about the ranges?
----------------------------

Ranges exist in jblas but even I don't really use them. Hm?

what to do about indices
------------------------

You want to be able to index a matrix with enumerables, e.g.

i = [1,2,3,4]
x[i]

Right now, I have all kinds of hacks for making that work. You wouldn't want
to have x[i.to_java :int], for example.

But you also don't want that such a simple operation as x[i] is so complexly
overloaded.

Right now, the fix is to patch .to_jblas_index into Numeric and Enumerable.
Seems to work?